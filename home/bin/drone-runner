#!/usr/bin/bash

VERSION=1.0.0

usage() {
    cat <<EOF
usage: drone-runner [-h] start | stop
-h, --help           Show this help message
-v, --version        Print version ($VERSION)
start                Starts detached drone docker runner using
                     DRONE_RPC_SECRET and DRONE_SERVER env vars
stop                 Stops docker runner

EOF
}

start() {
    if [ -z "$DRONE_RPC_SECRET" ]; then
	echo "missing DRONE_RPC_SECRET"
	exit 1
    fi;
    if [ -z "$DRONE_SERVER" ]; then
	echo "missing DRONE_SERVER"
	exit 1
    fi;

    DRONE_RPC_PROTO="$(echo "$DRONE_SERVER" | cut -d ':' -f 1)"
    DRONE_RPC_HOST="$(echo "$DRONE_SERVER" | cut -d '/' -f 3)"

    docker run -d \
	-v /var/run/docker.sock:/var/run/docker.sock \
	-e DRONE_RPC_PROTO="${DRONE_RPC_PROTO}" \
	-e DRONE_RPC_HOST="${DRONE_RPC_HOST}" \
	-e DRONE_RPC_SECRET="${DRONE_RPC_SECRET}" \
	-e DRONE_RUNNER_CAPACITY=2 \
	-e DRONE_RUNNER_NAME="${HOSTNAME}" \
	-e DRONE_UI_USERNAME=root \
	-e DRONE_UI_PASSWORD=root \
	-p 3000:3000 \
	--restart always\
	--name runner \
	drone/drone-runner-docker:1
}

stop() {
    docker stop runner
    docker rm runner
}

main() {
    while [ "$1" ]; do
	case "$1" in
	    --help | -h) usage && exit ;;
	    --version | -v) echo $VERSION && exit ;;
	    -*) echo "Error: option $1 does not exist" ;;
	    stop) stop "$@" && exit ;;
	    start) start "$@" && exit ;;
	    *) usage && exit ;;
	esac
	shift
    done
    usage && exit;
}

main "$@";
